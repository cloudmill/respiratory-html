.header {
  $component: &;
  $transition: transition(major);
  $headerTopHeight: rem(61px);

  --hover-color: #{color(blue)};
  --logo-color: #{color(blue)};

  position: fixed;
  z-index: 2;
  top: 0;
  left: 0;
  right: 0;

  transition: $transition;

  &--hide {
    transform: translateY(-100%);
  }
  &--short {
    transform: translateY(-#{$headerTopHeight});
  }

  &--transparent {
    --hover-color: #{color(yellow)};
    --logo-color: #{color(white)};

    #{$component} {
      // top & bottom:

      &__top,
      &__bottom {
        background-color: transparent;
      }

      &__top {
        border-bottom: 1px solid color(header-transparent-border);
      }

      // link

      &__link {
        &-link {
          color: color(white);
        }
      }

      // search

      &__search {
        &-svg {
          path {
            fill: color(white);
          }
        }
      }

      &__mobile {
        background: transparent;
      }

      &__burger {
        border-color: color(white);
        &::before,
        &::after {
          background: color(white);
        }
      }
    }

    // press

    .press {
      &--white {
        .press {
          &__text {
            &--start {
              color: color(white);
            }
          }
        }
      }
    }

    // drop

    .drop {
      &__cur {
        color: color(white);
      }

      &__svg {
        path {
          fill: color(white);
        }
      }
    }
  }

  &.menu {
    .mobile-menu {
      transform: none;
    }
  }

  // top & bottom

  &__top,
  &__bottom {
    background-color: color(white);
  }

  &__top {
    height: $headerTopHeight;

    border-bottom: 1px solid color(gray);
    transition: background-color $transition, border-color $transition;
  }

  &__bottom {
    height: rem(108px);

    transition: background-color $transition;
  }

  // row

  &__row {
    display: grid;
    grid-template-columns:
      calc(#{columns(3)}) calc(#{columns(2)}) calc(#{columns(4)})
      calc(#{columns(3)});
    column-gap: $column-gap;
    @media #{media("<")} {
      display: flex;
      align-items: center;
      justify-content: space-between;
    }

    &--align {
      &-baseline {
        align-items: baseline;
      }

      &-center {
        align-items: center;
      }
    }

    &-item {
      &--align {
        &-transform {
          transform: translateY(rem(-5px));
        }
      }
    }
  }

  &__col {
    &:nth-child(2) {
      @media #{media("<")} {
        display: flex;
      }
    }
  }

  &__button {
    margin-right: rem(12px);
  }

  &__buttons {
    display: flex;
    align-items: center;

    &-item {
      &:not(:first-child) {
        margin-left: rem(16px);
      }
    }
  }

  // container

  &__container {
    padding: rem(24px) 0;
    @media #{media("<")} {
      padding: rem(15px) 0;
    }
    &--top {
      padding: rem(19px) 0 rem(22px);
    }
  }

  // link

  &__link {
    $element: &;

    display: flex;

    &--large {
      #{$element} {
        &-link {
          @include fsl(18px);
        }
      }
    }

    &-link {
      @include font-fsl("title-1", 13px, 100%);
      font-weight: 550;

      transition: color $transition;

      &:hover {
        color: var(--hover-color);
      }
    }
  }

  // grid

  &__grid {
    $element: &;

    display: flex;

    &--right {
      #{$element} {
        &-item {
          &:nth-child(2) {
            margin: 0 auto;
          }
        }
      }
    }

    &--left {
      #{$element} {
        &-item {
          &:nth-child(1) {
            margin: 0 auto;
          }
        }
      }
    }

    &--align-baseline {
      align-items: baseline;
    }

    &-item {
    }
  }

  // triple

  &__triple {
    display: grid;
    grid-template-columns: repeat(3, calc((100% - #{$column-gap} * 2) / 3));
    column-gap: $column-gap;

    &--align-baseline {
      align-items: baseline;
    }

    &-item {
      &:nth-child(3) {
        display: flex;
        justify-content: flex-end;
      }
    }

    &-bottom {
      @media #{media('<', xl)} {
        display: flex;
        justify-content: space-between;
        padding-left: rem(20px);
      }
    }
  }

  // logo

  &__logo {
    @media #{media("<")} {
      position: relative;
      z-index: 2;
    }

    display: flex;

    &-link {
      display: flex;
    }

    &-svg {
      @include rectangle(rem(194px), rem(49px));
      @media #{media("<")} {
        @include rectangle(rem(102px), rem(26px));
      }
      path {
        fill: var(--logo-color);
        transition: fill $transition;
      }
    }
  }

  // search

  &__search {
    display: flex;

    &--align-transform {
      transform: translateY(rem(5px));
    }

    &-svg {
      @include rectangle(rem(24px));

      cursor: pointer;

      &:hover {
        path {
          fill: var(--hover-color);
        }
      }

      path {
        transition: fill $transition;
      }
    }
  }

  // last

  &__last {
    display: flex;
    justify-content: flex-end;
  }

  &__desktop {
    @media #{media("<")} {
      display: none;
    }
    border-bottom: 1px solid color(gray);
  }

  &__mobile {
    @media #{media(">")} {
      display: none;
    }

    background: color(white);
  }

  &__burger {
    position: relative;
    z-index: 1;

    width: rem(22px);
    height: rem(16px);

    border-top: 2px solid color(black);
    border-bottom: 2px solid color(black);
    transition: border-color $transition;
    // transition: height 0.4s 0.4s $transition-timing-function, border-color 0.4s 0.4s $transition-timing-function;

    &::before,
    &::after {
      content: "";
      position: absolute;
      top: 50%;
      left: 0;
      transform: translate(0, -50%);

      width: 100%;
      height: 2px;

      transition: background $transition;
      // transition: transform 0.4s $transition-timing-function;
      background: color(black);
    }
  }

  &__modals {
    &.active {
      #{$component}__overlay {
        opacity: 1;
        pointer-events: all;
      }
    }
  }

  &__overlay {
    position: absolute;
    left: 0;
    right: 0;
    bottom: 0;
    top: 100%;

    height: 200vh;

    background: color(modal-layout);
    opacity: 0;
    pointer-events: none;
    transition: $transition;
  }
}
