.top {
  position: relative;
  z-index: 0;

  height: 100vh;
  overflow: hidden;

  background-color: gray; // test
  border-radius: 0 0 rem(120px) 0;

  &__layout {
    @include inset;

    position: absolute;
    z-index: 0;

    &--root {
      pointer-events: none;
    }
  }

  &__controls {
    position: absolute;
    bottom: rem(40px);
    left: rem(40px);

    width: calc(#{columns(6)});
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    align-items: flex-end;
    pointer-events: all;
  }

  &__control {
    $el: &;

    $border-radius: rem(12px);

    --height: #{rem(80px)};

    --background-color: #{color(white)};

    --border-radius: 0;
    --border-opacity: 1;
    --border-color: #{color(gray)};

    --text-color: #{color(black)};
    --text-offset: #{rem(6px)};

    --progress-opacity: 0;

    --transition: #{transition(major)};

    @keyframes top-control-progress {
      0% {
        transform: scaleX(0);
      }

      100% {
        transform: scaleX(1);
      }
    }

    position: relative;
    z-index: 0;
    transform: translate3d(0, 0, 0);
    will-change: height, background-color, border-radius, padding;

    padding: rem(25px) rem(20px);
    height: var(--height);
    display: flex;
    justify-content: center;
    overflow: hidden;

    background-color: var(--background-color);
    transition: height var(--transition), background-color var(--transition),
      border-radius var(--transition), padding var(--transition);

    &:nth-child(1) {
      border-radius: var(--border-radius) var(--border-radius) 0
        var(--border-radius);
    }

    &:nth-child(2) {
      border-radius: var(--border-radius) var(--border-radius) 0 0;
    }

    &:nth-child(3) {
      border-radius: var(--border-radius) var(--border-radius)
        var(--border-radius) 0;
    }

    &:not(:first-child) {
      &::before {
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        will-change: opacity, background-color;

        content: "";
        width: 1px;
        pointer-events: none;

        background-color: var(--border-color);
        opacity: var(--border-opacity);
        transition: opacity var(--transition),
          background-color var(--transition);
      }
    }

    &--active {
      --progress-opacity: 1;

      --height: #{rem(105px)};

      --background-color: #{color(blue)};

      --border-radius: #{$border-radius};
      --border-opacity: 0;
      --border-color: #{color(blue)};

      --text-color: #{color(white)};
      --text-offset: 0;

      padding: rem(25px) rem(20px) rem(40px);

      & + {
        #{$el} {
          --border-opacity: 0;

          &-progress {
            transition: opacity var(--transition);
          }
        }
      }
    }

    &--progress {
      #{$el} {
        &-progress {
          &::before,
          &::after {
            animation-name: top-control-progress;
          }
        }
      }
    }

    &:not(#{$el}--active) {
      cursor: pointer;

      &:first-child {
        border-radius: $border-radius 0 0 $border-radius;
      }

      &:last-child {
        border-radius: 0 $border-radius $border-radius 0;
      }
    }

    &-text {
      @include font-fsl("title-2", 18px, 100%);

      transform: translate3d(0, var(--text-offset), 0);
      will-change: color, transform;

      color: var(--text-color);
      transition: color var(--transition), transform var(--transition);
    }

    &-progress {
      position: absolute;
      z-index: 0;
      top: rem(85px);
      left: rem(20px);
      right: rem(20px);
      will-change: opacity;

      pointer-events: none;

      opacity: var(--progress-opacity);

      &::before,
      &::after {
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;
        will-change: transform;

        content: "";
        height: 2px;

        animation-duration: 5s;
        animation-fill-mode: forwards;
        animation-timing-function: linear;
      }

      &::before {
        transform-origin: left;

        background-color: color(black);
      }

      &::after {
        transform-origin: right;

        background-color: color(white);

        animation-direction: reverse;
      }
    }
  }

  .swiper {
    height: 100%;

    &-slide {
      pointer-events: all;
    }
  }

  &__mask {
    overflow: hidden;
  }

  &__parallax {
    transform: translate3d(0, 0, 0);
    will-change: transform;
  }
}
