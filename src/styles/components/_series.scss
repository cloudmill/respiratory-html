.series {
  display: grid;
  grid-template-columns:
    repeat(2, calc(#{columns(3)})) repeat(2, calc(#{$column}))
    calc(#{columns(4)});
  grid-template-rows: auto 1fr repeat(2, auto);
  column-gap: $column-gap;
  row-gap: $column-gap;

  &__place {
    &:nth-child(1) {
      @include grid-area(1, 1, 1, 1);
    }
    &:nth-child(2) {
      @include grid-area(2, 1, 3, 1);
    }
    &:nth-child(3) {
      @include grid-area(1, 2, 2, 3);
    }
    &:nth-child(4) {
      @include grid-area(5, 1, 1, 4);
    }
    &:nth-child(5) {
      @include grid-area(4, 4, 1, 1);
    }
    &:nth-child(6) {
      @include grid-area(3, 4, 1, 1);
    }
    &:nth-child(7) {
      @include grid-area(4, 3, 1, 1);
    }
  }

  &__tabs {
    --gap: #{rem(8px)};

    margin-top: calc(var(--gap) * -1);
    margin-left: calc(var(--gap) * -1);
    display: flex;
    flex-wrap: wrap;

    &-item {
      margin-top: var(--gap);
      margin-left: var(--gap);
    }
  }

  &__photo {
    overflow: hidden;

    &--large {
      height: 100%;
      min-height: rem(744px);

      border-radius: 0 rem(16px) rem(16px) rem(16px);
    }

    &--small {
      // height: rem(168px);

      border-radius: rem(8px);
    }
  }

  // image

  &__image {
    @include rectangle(100%);

    display: block;
    object-fit: cover;
  }

  &__translate {
    $element: &;
    $easing: timing-function(major);

    @keyframes series-translate-wrapper {
      0% {
        transform: translateX(0);
      }

      100% {
        transform: translateX(-100%);
      }
    }

    @keyframes series-translate-img {
      0% {
        transform: translateX(0);
      }

      100% {
        transform: translateX(var(--parallax));
      }
    }

    @keyframes series-translate-img-invert {
      0% {
        transform: translateX(calc(var(--parallax) * -1));
      }

      100% {
        transform: translateX(0);
      }
    }

    @keyframes series-translate-fade {
      0% {
        opacity: 0;
      }

      100% {
        opacity: 1;
      }
    }

    @include rectangle(100%);

    overflow: hidden;

    &--image-image {
      &#{$element}--prev {
        #{$element} {
          &-wrapper {
            animation-name: series-translate-wrapper;
            animation-direction: reverse;
          }

          &-container {
            &:nth-child(1) {
              #{$element} {
                &-img {
                  animation-name: series-translate-img;
                }
              }
            }

            &:nth-child(2) {
              #{$element} {
                &-img {
                  animation-name: series-translate-img-invert;
                }
              }
            }
          }

          &-img {
            animation-direction: reverse;
          }
        }
      }

      &#{$element}--next {
        #{$element} {
          &-wrapper {
            animation-name: series-translate-wrapper;
          }

          &-container {
            &:nth-child(1) {
              #{$element} {
                &-img {
                  animation-name: series-translate-img;
                }
              }
            }

            &:nth-child(2) {
              #{$element} {
                &-img {
                  animation-name: series-translate-img-invert;
                }
              }
            }
          }
        }
      }
    }

    &--image-empty,
    &--empty-image {
      #{$element} {
        &-img {
          animation-name: series-translate-fade;
        }
      }
    }

    &--image-empty {
      #{$element} {
        &-img {
          animation-direction: reverse;
        }
      }
    }

    &-wrapper {
      @include rectangle(100%);

      display: flex;

      animation-duration: var(--duration);
      animation-timing-function: $easing;
      animation-fill-mode: forwards;
    }

    &-container {
      @include rectangle(100%);

      flex-shrink: 0;
      display: flex;
      overflow: hidden;
    }

    &-img {
      @include rectangle(100%);

      object-fit: cover;

      animation-duration: var(--duration);
      animation-timing-function: $easing;
      animation-fill-mode: forwards;
    }
  }

  // slide inner

  &__main {
    height: 100%;
    display: grid;
    grid-template-rows: 1fr auto;
  }

  &__content {
    padding-top: 40px;

    &-sub-title {
      @include font-fsl("content-2", 16px, 130%);

      margin-bottom: $column-gap;
    }
  }

  &__watch {
    margin-top: rem(80px);
  }

  // features

  &__features {
    margin-top: rem(40px);
  }

  &__feature {
    --gap: #{rem(4px)};

    display: flex;

    &:not(:first-child) {
      margin-top: rem(40px);
    }

    &-image {
      @include rectangle(rem(60px));

      margin-right: rem(12px);
      flex-shrink: 0;
    }

    &-content {
    }

    &-title {
      @include font-fsl("title-2", 13px, 100%);
      font-weight: 550;

      margin-bottom: rem(8px);
    }

    &-labels {
      margin-top: calc(var(--gap) * -1);
      margin-left: calc(var(--gap) * -1);
      display: flex;
      flex-wrap: wrap;
    }

    &-label {
      @include font-fsl("content-1", 12px, 130%);

      margin-top: var(--gap);
      margin-left: var(--gap);
      padding: 0 rem(12px);
      height: rem(30px);
      display: flex;
      align-items: center;

      background-color: color(gray-light);
      border-radius: rem(6px);
      white-space: nowrap;
    }
  }

  // descriptions

  &__descriptions {
    margin-top: rem(20px);
    display: grid;
    grid-template-columns: repeat(2, calc(#{columns(3)}));
    column-gap: $column-gap;
    row-gap: $column-gap;
  }

  &__description {
    position: relative;
    z-index: 0;

    padding: rem(30px) 0 0 rem(30px);

    &-text {
      @include font-fsl("content-2", 16px, 130%);

      max-width: rem(320px);
    }

    &-svg {
      @include rectangle(rem(21px));

      position: absolute;
      top: 0;
      left: 0;

      path {
        stroke: color(blue);
      }
    }
  }

  // slides

  &__slides {
    position: relative;
    z-index: 0;

    height: 100%;
    display: grid;
  }

  &__slide {
    $element: &;

    @include grid-area(1, 1, 1, 1);

    &:not(#{$element}--active) {
      z-index: -1;

      visibility: hidden;
      user-select: none;
      pointer-events: none;
    }
  }
}
