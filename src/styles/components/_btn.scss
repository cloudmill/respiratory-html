.companies {
  --columns-count: 6;

  --column-gap: #{$column-gap};
  --row-gap: #{$column-gap};

  display: grid;
  grid-template-columns: repeat(var(--columns-count), 1fr);
  column-gap: var(--column-gap);
  row-gap: var(--row-gap);

  @media #{media("<")} {
    --columns-count: 2;

    --column-gap: #{$column-gap-small};
  }

  &--margin {
    &--default {
      margin-top: rem(100px);

      @media #{media("<")} {
        margin-top: rem(20px);
      }
    }
  }

  &__place {
  }
}

.company {
  $component: &;
  $transition: transition(major);

  display: block;

  &:hover,
  &:focus {
    #{$component} {
      &__frame {
        border-color: color(yellow);
      }

      &__img {
        transform: scale(1.1);
      }

      &__text {
        color: color(blue);
      }
    }
  }

  &__frame {
    height: rem(180px);
    overflow: hidden;

    background-color: color(white);
    border: 1px solid color(gray);
    border-radius: 0 rem(12px) rem(12px) rem(12px);
    transition: border-color $transition;
  }

  &__img {
    @include rectangle(100%);

    transform: scale(1);

    display: block;
    object-fit: contain;

    transition: transform $transition;
  }

  &__text {
    @include font-fsl("content-1", 16px, 130%);

    margin-top: rem(16px);

    transition: color $transition;
  }
}

.btn {
  $component: &;
  $transition: transition(minor);

  --height: #{rem(60px)};
  --padding: #{rem(40px)};

  display: flex;

  &--fluid {
    #{$component} {
      &__btn {
        width: 100%;
      }
    }
  }

  &--radius {
    &--s {
      --radius: #{rem(4px)};
    }

    &--m {
      --radius: #{rem(6px)};
    }

    &--l {
      --radius: #{rem(8px)};
    }

    &--xl {
      --radius: #{rem(12px)};
    }
  }

  &__btn {
    position: relative;
    z-index: 0;

    pointer-events: none;

    cursor: pointer;

    &:disabled {
      cursor: not-allowed;

      #{$component} {
        &__text {
          color: color(gray-dark);
          opacity: 0.3;
        }

        &__background {
          background-color: color(gray-light);
        }

        &__decoration {
          &::before {
            border-color: color(gray);
          }
        }
      }
    }

    &:not(:disabled) {
      &:hover,
      &:focus {
        #{$component} {
          &__mask {
            &--main {
              height: 0;
            }

            &--second {
              height: var(--height);
            }
          }

          &__decoration {
            $move: rem(4px);

            &::before {
              $count: 3;

              @keyframes btn-decoration-opacity {
                from {
                  opacity: 1;
                }

                to {
                  opacity: 0;
                }
              }

              animation: btn-decoration-opacity
                math.div(duration(default), $count) timing-function(minor)
                ($count * 2) alternate;
            }

            &:nth-child(1) {
              transform: translate($move, -$move);
            }

            &:nth-child(2) {
              transform: translate(-$move, $move);
            }
          }
        }
      }
    }
  }

  &__block {
    z-index: 0;

    height: var(--height);

    &--relative {
      position: relative;
    }

    &--absolute {
      @include inset;

      position: absolute;
    }
  }

  &__mask {
    will-change: auto;

    overflow: hidden;

    transition: height $transition;

    &--main {
      height: var(--height);
    }

    &--second {
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;

      height: 0;
      display: flex;
      align-items: flex-end;
    }
  }

  &__place {
    position: relative;
    z-index: 0;

    width: 100%;
    height: var(--height);
  }

  &__content {
    padding: 0 var(--padding);
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    pointer-events: all;
    overflow: hidden;

    border-radius: var(--radius);
  }

  &__text {
    @include font-fsl("title-1", 13px, 100%);

    white-space: nowrap;
    transition: color $transition, opacity $transition;

    &--white {
      color: color(white);
    }

    &--black {
      color: color(black);
    }
  }

  &__background {
    @include inset;

    position: absolute;

    border-radius: var(--radius);
    transition: background-color $transition;

    &--blue {
      background-color: color(blue);
    }

    &--yellow {
      background-color: color(yellow);
    }

    &--white {
      background-color: color(white);
      border: 1px solid color(gray);
    }

    &--transparent {
      border: 2px solid color(white);
    }
  }

  &__decoration {
    $offset: rem(10px);
    $size: rem(10px);

    @include rectangle($size);

    position: absolute;
    transform: translate(0, 0);

    transition: transform $transition;

    &::before {
      @include inset;

      position: absolute;

      content: "";

      border: 1.5px solid transparent;
      border-top: none;
      border-right: none;
      border-radius: 0 0 0 50%;
      transition: border-color $transition;
    }

    &:nth-child(1) {
      bottom: $offset;
      left: $offset;
    }

    &:nth-child(2) {
      top: $offset;
      right: $offset;

      &::before {
        transform: rotate(180deg);
      }
    }

    &--yellow {
      &::before {
        border-color: color(yellow);
      }
    }

    &--black {
      &::before {
        border-color: color(black);
      }
    }
  }

  &__icon {
    &--modifier {
      &--map {

      }
    }

    &--side {
      &--left {
        margin-right: rem(10px);
      }

      &--right {
        margin-left: rem(10px);
      }
    }

    &--move {
      &--yes {

      }

      &--no {
        
      }
    }
  }

  &__svg {

  }
}

.z-index {
  @for $z-index from -1 through 3 {
    &-#{$z-index} {
      z-index: $z-index;
    }
  }
}
