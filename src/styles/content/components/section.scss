.section {
  $component: &;

  margin-top: 20px; // test

  &__border {
    border-top: 1px solid var(--color-gray-light);
  }

  &__container {
    padding-top: getRem(16px);
  }

  &__grid {
    display: grid;
    grid-template-columns: calc(#{getCols(3)}) calc(#{getCols(9)});
    column-gap: $gap;

    &--vertical {
      row-gap: getRem(32px);

      #{$component}__aside {
        @include getArea(1, 1, 2, 1);
      }
      #{$component}__main {
        @include getArea(1, 2, 2, 1);
      }
    }

    &--layering {
      #{$component}__aside,
      #{$component}__main {
        @include getArea(1, 2, 1, 1);
      }
    }
  }

  &__place {
    display: none;
  }
  &__aside {
    @include getArea(1, 1, 1, 1);
  }
  &__main {
    @include getArea(2, 1, 1, 1);
  }

  &__row {
    display: flex;

    &--space-between {
      justify-content: space-between;
    }
  }
}

.article {
  @include font-title(2);

  font-size: getRem(60px);
  line-height: 1.1;
  text-indent: getRem(150px);
  text-transform: uppercase;

  &__link {
    color: var(--color-blue);
  }
}

.title {
  &--section {
    @include font-title(2);

    font-size: getRem(18px);
    line-height: 1;
    text-transform: uppercase;
  }

  &--page {
    @include font(3);

    font-size: getRem(72px);
    line-height: 1;
    text-transform: uppercase;
  }
}

.cards {
  display: grid;
  grid-template-columns: repeat(3, calc(#{getCols(4)}));
  column-gap: getRem(20px);

  &__item {
  }
}

.card {
  $component: &;

  position: relative;
  z-index: 0;

  $padding: getRem(40px);
  padding: $padding calc(#{$col}) $padding $padding;
  height: getRem(600px);
  display: block;
  overflow: hidden;

  background-color: var(--color-black);
  $radius: getRem(16px);
  border-radius: 0px $radius $radius $radius;
  cursor: pointer;

  &::before {
    position: absolute;
    $offset: getRem(40px);
    top: $offset;
    right: $offset;

    content: "";
    $size: getRem(20px);
    width: $size;
    height: $size;

    border-top: 1px solid var(--color-blue);
    border-right: 1px solid var(--color-blue);
    border-radius: 0 getRem(10px) 0 0;
  }

  &:hover {
    #{$component}__title {
      color: var(--color-blue);
    }
  }

  &__title {
    @include font-title(2);

    font-size: getRem(28px);
    line-height: 1.1;
    color: var(--color-white);
    text-transform: uppercase;
  }

  &__label {
    position: absolute;
    $offset: getRem(40px);
    bottom: $offset;
    right: $offset;

    $size: getRem(64px);
    width: $size;
    height: $size;
    display: flex;
    justify-content: center;
    align-items: center;

    background-color: var(--color-blue);
    border-radius: 50%;

    &-svg {
    }
  }

  &__background {
    @include inset(0);

    position: absolute;
    z-index: -1;

    width: 100%;
    height: 100%;
    object-fit: cover;
    pointer-events: none;
  }
}

.button {
  $component: &;

  $size: getRem(64px);
  width: $size;
  height: $size;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;

  background-color: var(--color-black);
  border-radius: 50%;
  cursor: pointer;

  &:hover {
    background-color: var(--color-blue);
  }

  &--right {
    #{$component}__svg {
      transform: rotate(45deg);
    }
  }

  &__svg {
    transform: rotate(-135deg);

    $size: getRem(17px);
    width: $size;
    height: $size;
  }
}

.buttons {
  display: flex;
  align-items: center;

  &__item {
    &:last-child {
      margin-left: getRem(8px);
    }
  }
}

.products {
  $components: &;

  &__grid {
    $gap-column: $gap;
    $gap-row: getRem(88px);

    display: grid;
    grid-template-columns:
      calc(#{getCols(3)}) calc(#{getCols(3)}) calc(#{getCols(2)})
      calc(#{getCols(4)});
    grid-template-rows: auto 1fr;
    column-gap: $gap-column;
    row-gap: $gap-row;

    &-cell {
      &--title {
        @include getArea(1, 1, 1, 1);
      }
      &--tabs {
        @include getArea(2, 1, 2, 1);
      }
      &--content {
        @include getArea(1, 2, 2, 1);
      }
      &--photos {
        @include getArea(3, 2, 1, 1);

        align-self: end;
      }
      &--photo {
        @include getArea(4, 1, 1, 2);
      }
    }

    &-fake {
      display: none;
    }
  }

  &__photos {
    $gap-column: $gap;
    $gap-row: $gap;

    display: grid;
    grid-template-columns: repeat(2, calc(#{getCols(1)}));
    column-gap: $gap-column;
    row-gap: $gap-row;

    &-cell {
      height: getRem(167px);

      &:nth-child(1) {
        @include getArea(2, 1, 1, 1);
      }
      &:nth-child(2) {
        @include getArea(1, 2, 1, 1);
      }
      &:nth-child(3) {
        @include getArea(2, 2, 1, 1);
      }
    }

    &-fake {
      display: none;
    }
  }

  &__photo {
    width: 100%;
    height: 100%;
    min-height: getRem(744px);
    object-fit: cover;
    overflow: hidden;

    border-radius: 0px getRem(16px) getRem(16px) getRem(16px);

    &--small {
      min-height: auto;

      border-radius: getRem(8px);
    }
  }

  &__content {
    height: 100%;
    display: grid;
    grid-template-rows: repeat(5, auto) 1fr;

    &-place {
      $gaps: (20px, 20px, 60px, 20px, 115px);

      $index: 2;
      @each $gap in $gaps {
        &:nth-child(#{$index}) {
          margin-top: getRem($gap);
        }

        $index: $index + 1;
      }

      &:last-child {
        align-self: end;
      }
    }
  }

  &__title {
    &--main {
      @include font-title(3);

      font-size: getRem(130px);
      line-height: 1;
      text-transform: uppercase;
    }

    &--sub {
      font-size: getRem(16px);
      line-height: 1.3;
      letter-spacing: -0.01em;
    }

    &--list {
      @include font-title(2);

      font-size: getRem(13px);
      line-height: 1;
      text-transform: uppercase;
    }
  }

  &__features {
    display: grid;
    grid-template-columns: repeat(2, calc(#{getCols(3)}));
    column-gap: $gap;

    &-place {
      position: relative;
      z-index: 0;

      padding: getRem(30px) 0 0 getRem(30px);
    }

    &-icon {
      @include getSize(getRem(21px));

      position: absolute;
      z-index: 0;
      top: 0;
      left: 0;

      &::before,
      &::after {
        @include getSize(getRem(11px));

        position: absolute;

        content: "";

        border-bottom: 1px solid var(--color-blue);
        border-left: 1px solid var(--color-blue);
        border-radius: 0 0 0 getRem(5px);
      }
      &::before {
        top: 0;
        right: 0;
      }
      &::after {
        bottom: 0;
        left: 0;
        transform: rotate(180deg);
      }
    }

    &-text {
      max-width: getRem(320px);

      font-size: getRem(16px);
      line-height: 1.3;
      letter-spacing: -0.01em;
    }
  }
}

.tags {
  $component: &;

  $gap-column: getRem(8px);
  $gap-row: getRem(8px);

  &__grid {
    margin-top: -$gap-row;
    margin-left: -$gap-column;
    display: flex;
    flex-wrap: wrap;
  }

  &__item {
    margin-top: $gap-row;
    margin-left: $gap-column;
  }
}
